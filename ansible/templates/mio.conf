# Mio node type: master, job, index, playout or resource
nodetype={{type}}

# ID to use for clustering.
clusterid=ft-mio-{{clusterid}}

# Defines the name of the logs directory
# /var/nem-logs/<clientname>/<domainname>/jboss/<hostname>/now/
clientname=ft

# Defines master account URL. All account names will be templated according to this, ie. for the example below it would be in the "account.uat.company.com" format
domainname={{domain}}

# log4j log level
log.level=WARN

# Enable JVM debugging
jvm.debug=false

# Database configuration
databasehost={{db_host}}
databasename=mio
databaseuser=admin
databasepassword={{ db_password }}

# Shared storage
# filestore is for indexes, cluster state and various temporary work files
# media is for your media files
# You can force nem to recursively chown the mounted storage to the user specified - recommended to set to 'mio' when using NFS.
filestore.owner=
# You can use the 'local' option ONLY if you're running in a non-clustered, single-master environment
# filestore.mount=local

filestore.mount=nfs {{ storage_nodes }}:/u02

# This is your media storage share
# - you can pass options to mount.cifs as the third argument, like in the example below
# - the uid and gid options are mandatory
# - when using newer Linux kernels you might need to use sec=ntlm to mount successfully (for example with netApp)
media.mount=local
media.dirs=RECURSIVEWILDCARD

# Keep this set to local.
public.mount=local
public.owner=

# Subdirectory of /nem/apache/holdingpages containing a page displayed by Apache when Mio is down
holdingpages=default

# CARP configuration
# Use the following if you are not using CARP:
sharedip.vhid = 1
sharedip.password = password
sharedip.addresses = 127.0.0.1
sharedip.ip = 127.0.0.3
# If using CARP, you'll need a unique vhid!
# sharedip.vhid = 13
# sharedip.password = yourp4ssw0rd
# sharedip.addresses = 10.10.11.11,10.10.11.12 # comma-separated list of IP addresses of Mio Master nodes
# sharedip.ip = 10.10.11.10 # the virtual CARP IP
# You can declare extra packages that NEM will check the operating system for before allowing you to start Mio
supplementalpackages=cifs-utils,clamav

# Intermediate SSL certificate for Apache. This is only required if specified by your certification authority.
# If not, ensure this file is a commented string
SSLCertificateChainFile = SSLCertificateChainFile /etc/apache2/mio_intermediate.cer
#SSLCertificateChainFile= # not applicable

# Java executable path
java.executable=/usr/java/jdk1.7.0_80/bin/java

# Holds IP addresses of masters (i.e. where HornetQ is deployed)
master.ip.addresses={{master_nodes}}

job.ip.addresses={{job_nodes}}

# The 'masteruser' password if different from default
masteruser.password=masteruser
# Hibernate search
# indexing topology - 'standalone' means local indexing, 'slave' means relying on an indexing node
# If this is set to standalone or not set, NEM will buildout with indexing executing on masters
hibernate.search.index.topology=slave

# Mio Playout API settings
tv.nativ.mio.playout.api.endpoint=https://playout.uat.company.com
tv.nativ.mio.playout.api.username=masteruser
tv.nativ.mio.playout.api.password=masteruser

#####################
# Optional settings:
#
# set initial and maximum amount of allocated heapspace:
# heapspace=2g
#
# send log files to a log4j server listening on port 4560 (for example Logstash with a log4j input):
# logstash.server=10.10.10.9
#
# comma-separated list of hosts Apache should be load balancing over. If not specified, the default is all hosts in the cluster (nem.cluster.ip.addresses)
# ajp13workers=10.10.11.11,10.10.11.12
#
# add a JMX username/password to allow for monitoring over JMX. please note that the JMX port is
# listening on localhost:9999 only and you will need to use JBoss EAP remoting-jmx libraries to connect.
# the connection string is service:jmx:remoting-jmx://localhost:9999
#
# you can find detailed information about JMX in JBoss EAP at https://planet.jboss.org/post/jmx_connections_to_jboss_as
jmx.username=user
jmx.password=password
#
# LDAP integration
# ldap.url=ldap://ldap.server.company.com:389/

# ldap.domain=company.com

# ldap.searchbase=OU=employees,DC=company,DC=com
